#include <iostream>
#include "windows.h"
#include "conio.h"

using namespace std;

struct Stack {

    char key;
    Stack *next;

};


void push(Stack  **smth, char keys) {

    Stack  *pstart = new Stack ;
    pstart->key = keys;
    pstart->next = *smth;
    *smth = pstart;

}
char pop(Stack  **smth) {
    char zn;
    Stack *topStart =  *smth;
    if (topStart==0)return 0;

    zn = topStart->key;
    *smth = topStart->next;
    delete topStart;
    return zn;
}

int viewPop(Stack  **smth) {
    int zn;
    Stack *topStart =  *smth;
    if (topStart==0)return 0;
    zn = topStart->key;
    return zn;
}

void view(Stack *smth,Stack *tail) // Просмотр списка, передаем адрес
 {

    Stack *pstart=smth;
    if (pstart!=NULL) {
    cout << endl <<"Ваш стэк: \n\n";

    cout << pstart->key << " ";
    pstart = pstart->next;
    while(pstart!=tail) {
        cout << pstart->key << " ";
        pstart = pstart->next;
    }
    cout << endl;

    }
    else {
    cout << "Стэк Пуст\n\n";


    cout << "Любая клавиша для возврата" << endl;
    _getch();
    system("cls");

    }

 }

int symbols(char sym) {

    switch(sym)
	{
		case ')':return -1;
	    case '(':return 0;
		case '+':return 1;
		case '-':return 1;
		case '*':return 2;
		case '/':return 2;
		case '^':return 3;
		default: return -10;
	}


 }

int main()
{
    setlocale (LC_ALL,"");
    Stack *head = NULL; //Начало стэка, отсюда мы можем извлекать числа
    Stack *tail = head; //Хвост стэка, в ассемблере код был 0h, нет еще приплюсованных элементов

    char exp[] = "3+4*2/(1-5)^2";
    char out[40]; memset(out,NULL,40);

    int k = 0,l = 0;

    while(exp[k]){ // Пока есть ещё символы для чтения

        if (isdigit(exp[k])) { //Если символ является числом, добавляем его к выходной строке.
            out[l]+=exp[k];
            out[l+1]+=' ';
            l+=2;
        }

        if ((symbols(exp[k])>0)) {

            while (symbols(viewPop(&head))>=symbols(exp[k])) {
                out[l]+=pop(&head);
                out[l+1]+=' ';
                l+=2;
            }
            push(&head,exp[k]); //Если символ является символом функции, помещаем его в стек.
        }

        if (symbols(exp[k])==0) {
             push(&head,exp[k]); //Если символ является открывающей скобкой, помещаем его в стек.
        }

        if (symbols(exp[k])==-1) { //Если символ является закрывающей скобкой:
            while (symbols(viewPop(&head))!=0) { //До тех пор, пока верхним элементом стека не станет открывающая скобка
                //Выталкиваем элементы из стека в выходную строку
                out[l]+=pop(&head);
                out[l+1]+=' ';
                l+=2;
            }
            pop(&head);
            //При этом открывающая скобка удаляется из стека, но в выходную строку не добавляетс

            //Если стек закончился раньше, чем мы встретили открывающую скобку, это означает,
            //что в выражении либо неверно поставлен разделитель, либо не согласованы скобки.
             if  ((symbols(viewPop(&head)))!=0&&(viewPop(&head)==0)) {
                cout << "Что-то пошло не атк";
                break;
             }
        }
        k++;
    }


    while(viewPop(&head)) {
       out[l]+=pop(&head);
       out[l+1]+=' ';
       l+=2;

    }

    cout << out;
    _getch();
    return 0;
}
