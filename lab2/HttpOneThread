import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.nio.charset.Charset;


public class HttpOneThread {

    private static ServerSocket sockets;
    private static int count=0;

    public static void main(String[] args) {

        int serverPort = 8080; // порт

        try {
            sockets = new ServerSocket(serverPort); /*Сокета  сервера */
        } catch (IOException e) {
            e.printStackTrace(); //Если порт занят
        }

        for (;count<=20 ; count++ ) {

            try {
                System.out.println("Сервер ожидает подключения " + (count) + " раз");
                Socket socket = sockets.accept(); /*Экземпляр класса
                                                Ожидает подключения к sockets*/

                System.out.println("Клиент установил соединение");

                InputStream inputStream = socket.getInputStream();    //Входящий поток данных
                OutputStream outputStream = socket.getOutputStream(); //Исходящий
                //Возвращают поток байт


                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                //Работа с входными потоком данных как со строками


                String get = request(inputStreamReader);

                if (get.startsWith("GET")) {
                    get = get.substring(get.indexOf("/") + 1, get.lastIndexOf(" "));
                    get = java.net.URLDecoder.decode(get, "utf-8");
                } else {
                    get = "Wrong!";
                }


                String head = "<head><link rel=\"shortcut icon\" href=\"http://www.iconj.com/ico/h/9/h9arpg5dsi.ico\" type=\"image/x-icon\" /></head>\n";
                String body = "<html>" + head + "<body><h1>" + "Вы ввели: " + get + "</h1></body></html>\n";
                String answer = "HTTP/1.1 200 OK\r\n" +
                        "Server: Brig207\r\n" +
                        "Content-Type: text/html; charset=utf-8\r\n" +
                        "Content-Length: " + body.length() + "\r\n" +
                        "Connection: close\r\n\r\n";

                answer += body;

                outputStream.write((answer).getBytes());
                outputStream.close();


            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }


private static String request(InputStreamReader inputStreamReader) throws IOException {

        BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        //Буферизирует символы и позволяет извлекать как строки, так и символы

        String first=null;
        while (true) {

            String get = bufferedReader.readLine();
            System.out.println("Было получено: " + get);
            if (get.isEmpty()) {
                break;
            }

            if (first==null) {
               first=get;
            }

        }
        return first;
    }

}
